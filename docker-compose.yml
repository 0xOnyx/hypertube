version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: hypertube-postgres
    environment:
      POSTGRES_DB: hypertube
      POSTGRES_USER: hypertube_user
      POSTGRES_PASSWORD: hypertube_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hypertube-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hypertube_user -d hypertube"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: hypertube-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hypertube-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service d'authentification
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: hypertube-auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EMAIL_VERIFICATION_ENABLED=false
      - EUREKA_REGISTER=false
      - EUREKA_FETCH=false
      # Configuration Redis explicite
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      # Configuration PostgreSQL explicite  
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hypertube
      - SPRING_DATASOURCE_USERNAME=hypertube_user
      - SPRING_DATASOURCE_PASSWORD=hypertube_password
      # Configuration JWT
      - JWT_SECRET=hypertubeSecretKeyDockerDevelopment2024
      - JWT_EXPIRATION=86400000
      - JWT_REFRESH_EXPIRATION=2592000000
      # Configuration Frontend
      - FRONTEND_URL=http://localhost:4200
      # Configuration Server
      - SERVER_PORT=8081
      # Configuration Email (optionnelle)
      - EMAIL_FROM=noreply@hypertube.com
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=${MAIL_USERNAME:-}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-}
      - MAIL_TEST_CONNECTION=false
      # Désactiver l'auto-configuration Spring Boot Mail si pas configuré
      - SPRING_AUTOCONFIGURE_EXCLUDE=org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration
      # Configuration OAuth2 (optionnelle - laissez vide pour désactiver)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-test_github_client_id}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-test_github_client_secret}
      - FORTYTWO_CLIENT_ID=${FORTYTWO_CLIENT_ID:-}
      - FORTYTWO_CLIENT_SECRET=${FORTYTWO_CLIENT_SECRET:-}
      # Configuration Eureka
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka
      # Configuration des logs
      - LOGGING_LEVEL_COM_HYPERTUBE_AUTH=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=DEBUG
      - LOGGING_LEVEL_ROOT=INFO
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hypertube-network

  # Service vidéo
  video-service:
    build:
      context: ./backend/video-service
      dockerfile: Dockerfile
    container_name: hypertube-video-service
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=hypertube
      - POSTGRES_USER=hypertube_user
      - POSTGRES_PASSWORD=hypertube_password
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hypertube-network
    volumes:
      - video_data:/app/videos

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: hypertube-api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_REGISTER=false
      - EUREKA_FETCH=false
      - LOG_LEVEL=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_GATEWAY=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=DEBUG
      - LOGGING_LEVEL_ROOT=INFO
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - video-service
    networks:
      - hypertube-network

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hypertube-frontend
    ports:
      - "4200:80"      # HTTP pour localhost/développement
      - "8443:443"     # HTTPS pour hypertube.com
      - "8090:8080"    # Port de monitoring/health check
    environment:
      - NGINX_DOMAIN=hypertube.com
      - NGINX_SSL_ENABLED=true
      - API_GATEWAY_URL=http://api-gateway:8080
    depends_on:
      - api-gateway
    networks:
      - hypertube-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  hypertube-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  video_data: 