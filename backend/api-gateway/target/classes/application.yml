server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        - id: auth-service
          uri: ${services.auth-service.url:http://auth-service:8081}
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
            
        - id: user-service
          uri: ${services.user-service.url:http://user-service:8082}
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=1
            
        - id: video-service
          uri: ${services.video-service.url:http://video-service:3002}
          predicates:
            - Path=/movies/**
          filters:
            - StripPrefix=1

  security:
    user:
      name: admin
      password: ${GATEWAY_ADMIN_PASSWORD:admin123}

# Configuration des services
services:
  auth-service:
    url: ${AUTH_SERVICE_URL:http://auth-service:8081}
  user-service:
    url: ${USER_SERVICE_URL:http://user-service:8082}
  video-service:
    url: ${VIDEO_SERVICE_URL:http://video-service:3002}

# Configuration JWT
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key}

# Configuration Redis (pour le cache)
redis:
  host: ${REDIS_HOST:redis}
  port: ${REDIS_PORT:6379}
  timeout: 2000ms

# Configuration Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Logging
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    com.hypertube: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Configuration sp√©cifique par profil
---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: http://auth-service:8081
          predicates:
            - Path=/auth/**
        - id: user-service
          uri: http://user-service:8082
          predicates:
            - Path=/users/**
        - id: video-service
          uri: http://video-service:3002
          predicates:
            - Path=/movies/**

---
spring:
  config:
    activate:
      on-profile: local
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: http://localhost:8081
          predicates:
            - Path=/auth/**
        - id: user-service
          uri: http://localhost:8082
          predicates:
            - Path=/users/**
        - id: video-service
          uri: http://localhost:3002
          predicates:
            - Path=/movies/** 