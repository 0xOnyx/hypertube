apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: hypertube
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: hypertube/api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: SPRING_REDIS_HOST
        - name: SPRING_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: SPRING_REDIS_PORT
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: AUTH_SERVICE_URL
        - name: VIDEO_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: VIDEO_SERVICE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: hypertube-secrets
              key: JWT_SECRET
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: hypertube-config
              key: CORS_ALLOWED_ORIGINS
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: hypertube
  labels:
    app: api-gateway
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: api-gateway
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hypertube-ingress
  namespace: hypertube
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: hypertube.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80 